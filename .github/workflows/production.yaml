name: quohr

on:
  push:
    branches:
      - 'main'

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@master
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-build-node-modules-cache-${{ hashFiles('**/package-lock.json') }}

      - name: install dependencies
        if: steps.cache-node-modules.cache-hit != 'true'
        run: npm install --prefer-offline

      - name: build projects
        run: npm run build
        env:
          NEXT_PUBLIC_API_HOST: ${{ secrets.NEXT_PUBLIC_API_HOST }}

      - name: install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.PROD_PVT_KEY }}
          known_hosts: ${{ secrets.PROD_HOST }}

      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.PROD_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy with rsync
        run: rsync -avz .next public package.json package-lock.json root@${{ secrets.PROD_HOST }}:/root/apps/cqed-frontend
      - name: ssh into server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PROD_HOST }}
          key: ${{ secrets.PROD_PVT_KEY }}
          username: root

          script: |
            cd /root/apps/cqed-frontend
            npm install --production
            pm2 delete cqed-frontend
            export NEXT_PUBLIC_API_HOST=${{ secrets.NEXT_PUBLIC_API_HOST }}
            pm2 start npm --name "cqed-frontend" -- start
